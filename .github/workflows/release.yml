name: Release

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4
      - name: Run Check
        run: cargo check
      # - name: Run tests
      #   run: cargo test
      # - name: Run Clippy
      #   run: cargo clippy
      - name: Run Build
        run: cargo build --release
      - uses: actions/checkout@v3
      - name: get version
        run: echo "::set-output name=version::$(cat 'Cargo.toml' | rg 'version' | head -n 1 | cut -d '\"' -f 2)"
        id: version
      - name: make release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: v${{ steps.version.outputs.version }}
          tag_name: ${{ github.ref }}
          body_path: CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: Upload Linux Artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./target/release/gemserv
          asset_name: gemserv
          asset_content_type: application/octet-stream
